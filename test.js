// Generated by LiveScript 1.5.0
(function(){
  var GitHub, marked, p, cmsless, list, createGist, config, slice$ = [].slice;
  GitHub = require('github-api');
  marked = require('marked');
  p = require('prelude-ls');
  cmsless = function(config){
    var github, load;
    github = new GitHub({
      username: config.github.username,
      password: config.github.password,
      auth: 'basic'
    });
    load = curry$(function(gists, callback){
      var head, tail;
      head = gists[0], tail = slice$.call(gists, 1);
      if (head == null) {
        return callback(null, []);
      }
      return github.getGist(head.id).read(function(err, gistContent){
        var getContent, result;
        if (err != null) {
          return callback(err);
        }
        getContent = function(fileconfig){
          var parts, transform, file, content;
          parts = p.map(function(it){
            return it.trim();
          })(
          p.split(">")(
          fileconfig));
          transform = function(file){
            switch (false) {
            case !(file.language === 'Markdown' && parts[1] === 'html'):
              return marked(file.content);
            case file.language !== 'JSON':
              return JSON.parse(file.content);
            default:
              return file.content;
            }
          };
          file = gistContent.files[parts[0]];
          console.log(file.language);
          content = file != null ? transform(file) : "";
          return [parts[0], content];
        };
        result = p.pairsToObj(
        p.map(getContent)(
        head.files));
        load(tail, function(err, child){
          var collected;
          if (err != null) {
            return callback(err);
          }
          collected = [result].concat(child);
          callback(null, collected);
        });
      });
    });
    return {
      load: load(config.gists)
    };
  };
  list = ['57ffb4bf954b70341f26e5079ff95ecd'];
  createGist = function(id){
    return {
      id: id,
      files: ["info.json", "about.md > html"]
    };
  };
  config = {
    github: {
      username: 'askucher',
      password: "vtufgjkbc1"
    },
    gists: p.map(createGist)(
    list)
  };
  cmsless(config).load(function(err, items){
    console.log(items);
  });
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
